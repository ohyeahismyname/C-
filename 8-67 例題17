  
#include <stdio.h>
#include <math.h>
#define MAX_SIZE 10000

int int_find_k (int n ){ 
    int k ;  
    int remn; //找出兩者間的除數
    remn = n / 4;
    int front_num = remn * 4 + 2 ;
    int back_num = (remn+1) *4 + 2 ; 
    if ( fabs (n - front_num) < fabs (n - back_num ) )  k = remn ; 

    else k = remn+1 ; 
    
    //printf("%f%f",fabs (n - front_num),fabs (n - back_num ));
    return k ;
}

int is_prime(int num) { //是否為質數
    if (num < 2) return 0;
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) return 0;
    }
    return 1;
}
/*
只需要找到sqrt(num) 因為非質數一定為a*b 兩個的最大值為sqrt(num)
*/

void find_primes(int N, int primes[], int *count) {
    *count = 0;  

    for (int i = 2; i <= N; i++) {
        if (is_prime(i)) {
            primes[*count] = i;  
            (*count)++;  
        }
    }

    
}

float find_pi_value(float pi , int primes[], int count){
    pi = 1.0;
    for(int i = 0 ; i < count ; i++ ){
        
        int den = int_find_k(primes[i]);
        den = den * 4 + 2 ;

        pi *= (float)primes[i]/(float)den;
        printf("%d,%d,%f\n",den,primes[i],pi);
        
    }
    
    return pi*2 ;
}

int main()
{
    int N, primes[MAX_SIZE], count;
    float pi ;  
    printf("請輸入一個數字: ");
    scanf("%d", &N);

    find_primes(N, primes, &count);  // 呼叫函數找出質數
    /*
    for (int i ; i < count;i++){
        printf("%d\n",primes[i]);
    }
    */
    pi = find_pi_value(pi , primes , count);
    printf( "%f"  , pi ) ; 
    
    
}
